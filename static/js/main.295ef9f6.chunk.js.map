{"version":3,"sources":["components/Book.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Book","key","this","props","id","className","imageLinks","src","alt","title","href","canonicalVolumeLink","target","rel","authors","categories","description","Component","Footer","App","state","searchTerm","bookList","isSearching","errorMessage","getBooks","e","setState","value","searchBook","axios","get","then","response","totalItemsFound","data","totalItems","items","catch","type","placeholder","onChange","handleInput","bind","onKeyDown","handleEnterKey","onClick","map","book","index","volumeInfo","thumbnail","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"kSAuCeA,G,6KAlCX,OACE,yBAAKC,IAAKC,KAAKC,MAAMC,GAAIC,UAAU,QAChCH,KAAKC,MAAMG,YACV,yBACED,UAAU,iBACVE,IAAKL,KAAKC,MAAMG,WAChBE,IAAKN,KAAKC,MAAMM,QAIpB,wBAAIJ,UAAU,cACZ,uBACEK,KAAMR,KAAKC,MAAMQ,oBACjBC,OAAO,SACPC,IAAI,uBAEHX,KAAKC,MAAMM,QAGhB,2BACE,4CADF,IAC6BP,KAAKC,MAAMW,SAGxC,2BACE,6CADF,IAC8BZ,KAAKC,MAAMY,YAEzC,2BACE,gDADF,IACiCb,KAAKC,MAAMa,kB,GA7BjCC,c,MCeJC,MAff,WACE,OACE,yBAAKd,GAAG,UAAR,WACW,IACT,uBAAGM,KAAK,8GAAR,iBAEK,IAJP,KAKK,IACH,uBAAGA,KAAK,4FAAR,cCqHSS,G,wDAzHb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,MAAQ,CACXC,WAAY,eACZC,SAAU,GACVC,aAAa,EACbC,aAAc,IAPC,E,gEAYjBtB,KAAKuB,a,kCAGKC,GACVxB,KAAKyB,SAAS,CAAEN,WAAYK,EAAEd,OAAOgB,U,qCAGxBF,GACC,UAAVA,EAAEzB,KACJC,KAAK2B,e,mCAKP3B,KAAKyB,SAAS,CAAEJ,aAAa,IAC7BrB,KAAKuB,a,iCAGK,IAAD,OACTK,IACGC,IADH,wDAEqD7B,KAAKkB,MAAMC,WAFhE,mBAIGW,MAAK,SAACC,GACL,IAAMC,EAAkBD,EAASE,KAAKC,WAEL,IAA7BH,EAASE,KAAKC,WAChB,EAAKT,SAAS,CACZL,SAAU,GACVC,aAAa,EACbC,aAAa,sBAAD,OAAwB,EAAKJ,MAAMC,cAGjD,EAAKM,SAAS,CACZL,SAAUW,EAASE,KAAKE,MACxBd,aAAa,EACbC,aAAa,GAAD,OAAKU,EAAL,qCAAiD,EAAKd,MAAMC,iBAI7EiB,OAAM,WACL,EAAKX,SAAS,CACZL,SAAU,GACVC,aAAa,EACbC,aACE,+E,+BAMR,OACE,6BACE,gCACE,kDACA,0FACA,yBAAKnB,UAAU,OACb,2BACEA,UAAU,YACVkC,KAAK,OACLX,MAAO1B,KAAKkB,MAAMC,WAClBmB,YAAY,oCACZC,SAAUvC,KAAKwC,YAAYC,KAAKzC,MAChC0C,UAAW1C,KAAK2C,eAAeF,KAAKzC,QAGrCA,KAAKkB,MAAMG,aAAe,yBAAKlB,UAAU,WAE1C,4BACEA,UAAU,SACVkC,KAAK,SACLO,QAAS5C,KAAK2B,WAAWc,KAAKzC,OAHhC,YAUJ,yBAAKG,UAAU,UACb,yBAAKA,UAAU,kBACZH,KAAKkB,MAAMI,cAAgB,2BAAItB,KAAKkB,MAAMI,eAG5CtB,KAAKkB,MAAME,UACV,yBAAKjB,UAAU,aACZH,KAAKkB,MAAME,SAASyB,KAAI,SAACC,EAAMC,GAAP,OACvB,kBAAC,EAAD,CACEhD,IAAK+C,EAAK5C,GACV6C,MAAOA,EACP3C,WACE0C,EAAKE,WAAW5C,YAChB0C,EAAKE,WAAW5C,WAAW6C,UAE7B1C,MAAOuC,EAAKE,WAAWzC,MACvBE,oBAAqBqC,EAAKE,WAAWvC,oBACrCG,QAASkC,EAAKE,WAAWpC,SAAW,MACpCC,WAAYiC,EAAKE,WAAWnC,YAAc,MAC1CC,YAAagC,EAAKE,WAAWlC,aAAe,aAMtD,kBAAC,EAAD,W,GApHUC,cCMEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhC,MAAK,SAACiC,GACLA,EAAaC,gBAEd5B,OAAM,SAAC6B,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.295ef9f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Book.css\";\n\nclass Book extends Component {\n  render() {\n    return (\n      <div key={this.props.id} className=\"book\">\n        {this.props.imageLinks && (\n          <img\n            className=\"book-thumbnail\"\n            src={this.props.imageLinks}\n            alt={this.props.title}\n          />\n        )}\n\n        <h2 className=\"book-title\">\n          <a\n            href={this.props.canonicalVolumeLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {this.props.title}\n          </a>\n        </h2>\n        <p>\n          <strong>Authors:</strong> {this.props.authors}\n        </p>\n\n        <p>\n          <strong>Category:</strong> {this.props.categories}\n        </p>\n        <p>\n          <strong>Description:</strong> {this.props.description}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id=\"Footer\">\n      Photo by{\" \"}\n      <a href=\"https://unsplash.com/@christinhumephoto?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n        Christin Hume\n      </a>{\" \"}\n      on{\" \"}\n      <a href=\"https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n        Unsplash\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Book from \"./components/Book\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: \"harry potter\",\n      bookList: [],\n      isSearching: false,\n      errorMessage: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  handleInput(e) {\n    this.setState({ searchTerm: e.target.value });\n  }\n\n  handleEnterKey(e) {\n    if (e.key === \"Enter\") {\n      this.searchBook();\n    }\n  }\n\n  searchBook() {\n    this.setState({ isSearching: true });\n    this.getBooks();\n  }\n\n  getBooks() {\n    axios\n      .get(\n        `https://www.googleapis.com/books/v1/volumes?q=${this.state.searchTerm}&maxResults=12`\n      )\n      .then((response) => {\n        const totalItemsFound = response.data.totalItems;\n\n        if (response.data.totalItems === 0) {\n          this.setState({\n            bookList: [],\n            isSearching: false,\n            errorMessage: `No books found for ${this.state.searchTerm}`,\n          });\n        } else {\n          this.setState({\n            bookList: response.data.items,\n            isSearching: false,\n            errorMessage: `${totalItemsFound} search results found for ${this.state.searchTerm}`,\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          bookList: [],\n          isSearching: false,\n          errorMessage:\n            \"Encountered Server Error. Please enter a search term and try again...\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>Google Book Search</h1>\n          <p>Find your book here and visit Google Play to find out more.</p>\n          <div className=\"bar\">\n            <input\n              className=\"searchbar\"\n              type=\"text\"\n              value={this.state.searchTerm}\n              placeholder='Eg. \"harry potter\", \"javascript\".'\n              onChange={this.handleInput.bind(this)}\n              onKeyDown={this.handleEnterKey.bind(this)}\n            />\n\n            {this.state.isSearching && <div className=\"loader\"></div>}\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.searchBook.bind(this)}\n            >\n              Search\n            </button>\n          </div>\n        </header>\n\n        <div className=\"result\">\n          <div className=\"result-message\">\n            {this.state.errorMessage && <p>{this.state.errorMessage}</p>}\n          </div>\n\n          {this.state.bookList && (\n            <div className=\"book-list\">\n              {this.state.bookList.map((book, index) => (\n                <Book\n                  key={book.id}\n                  index={index}\n                  imageLinks={\n                    book.volumeInfo.imageLinks &&\n                    book.volumeInfo.imageLinks.thumbnail\n                  }\n                  title={book.volumeInfo.title}\n                  canonicalVolumeLink={book.volumeInfo.canonicalVolumeLink}\n                  authors={book.volumeInfo.authors || \"N/A\"}\n                  categories={book.volumeInfo.categories || \"N/A\"}\n                  description={book.volumeInfo.description || \"N/A\"}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}